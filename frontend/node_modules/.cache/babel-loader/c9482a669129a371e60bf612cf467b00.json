{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_COLUMN = exports.SELECTION_ALL = void 0;\nexports[\"default\"] = useSelection;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\nvar _rcTable = require(\"rc-table\");\nvar _util = require(\"rc-tree/lib/util\");\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar React = _react;\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\nvar _warning = _interopRequireDefault(require(\"../../_util/warning\"));\n// TODO: warning if use ajax!!!\nvar SELECTION_COLUMN = exports.SELECTION_COLUMN = {};\nvar SELECTION_ALL = exports.SELECTION_ALL = 'SELECT_ALL';\nvar SELECTION_INVERT = exports.SELECTION_INVERT = 'SELECT_INVERT';\nvar SELECTION_NONE = exports.SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n    preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n    selectedRowKeys = _ref.selectedRowKeys,\n    defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n    getCheckboxProps = _ref.getCheckboxProps,\n    onSelectionChange = _ref.onChange,\n    onSelect = _ref.onSelect,\n    onSelectAll = _ref.onSelectAll,\n    onSelectInvert = _ref.onSelectInvert,\n    onSelectNone = _ref.onSelectNone,\n    onSelectMultiple = _ref.onSelectMultiple,\n    selectionColWidth = _ref.columnWidth,\n    selectionType = _ref.type,\n    selections = _ref.selections,\n    fixed = _ref.fixed,\n    customizeRenderCell = _ref.renderCell,\n    hideSelectAll = _ref.hideSelectAll,\n    _ref$checkStrictly = _ref.checkStrictly,\n    checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n  var prefixCls = config.prefixCls,\n    data = config.data,\n    pageData = config.pageData,\n    getRecordByKey = config.getRecordByKey,\n    getRowKey = config.getRowKey,\n    expandType = config.expandType,\n    childrenColumnName = config.childrenColumnName,\n    tableLocale = config.locale,\n    getPopupContainer = config.getPopupContainer;\n  // ========================= Keys =========================\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || EMPTY_LIST, {\n      value: selectedRowKeys\n    }),\n    _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n    mergedSelectedKeys = _useMergedState2[0],\n    setMergedSelectedKeys = _useMergedState2[1];\n  // ======================== Caches ========================\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = (0, _react.useCallback)(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map();\n      // Keep key if mark as preserveSelectedRowKeys\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n        newCache.set(key, record);\n      });\n      // Refresh to new cache\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]);\n  // Update cache with selectedKeys\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n  var _useMemo = (0, _react.useMemo)(function () {\n      return checkStrictly ? {\n        keyEntities: null\n      } : (0, _treeUtil.convertDataToEntities)(data, {\n        externalGetKey: getRowKey,\n        childrenPropName: childrenColumnName\n      });\n    }, [data, getRowKey, checkStrictly, childrenColumnName]),\n    keyEntities = _useMemo.keyEntities;\n  // Get flatten data\n  var flattedData = (0, _react.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]);\n  // Get all checkbox props\n  var checkboxPropsMap = (0, _react.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!('checked' in checkboxProps || 'defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.') : void 0;\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, _react.useCallback)(function (r) {\n    var _a;\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n  var _useMemo2 = (0, _react.useMemo)(function () {\n      if (checkStrictly) {\n        return [mergedSelectedKeys || [], []];\n      }\n      var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n      return [checkedKeys || [], halfCheckedKeys];\n    }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n    _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n    derivedSelectedKeys = _useMemo3[0],\n    derivedHalfSelectedKeys = _useMemo3[1];\n  var derivedSelectedKeySet = (0, _react.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, _react.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]);\n  // Save last selected key to enable range selection\n  var _useState = (0, _react.useState)(null),\n    _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n    lastSelectedKey = _useState2[0],\n    setLastSelectedKey = _useState2[1];\n  // Reset if rowSelection reset\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys(EMPTY_LIST);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, _react.useCallback)(function (keys, method) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records, {\n      type: method\n    });\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]);\n  // ====================== Selections ======================\n  // Trigger single `onSelect` event\n  var triggerSingleSelection = (0, _react.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n    setSelectedKeys(keys, 'single');\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, _react.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }), 'all');\n          }\n        };\n      }\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n            if (onSelectInvert) {\n              process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.') : void 0;\n              onSelectInvert(keys);\n            }\n            setSelectedKeys(keys, 'invert');\n          }\n        };\n      }\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }), 'none');\n          }\n        };\n      }\n      return selection;\n    }).map(function (selection) {\n      return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selection), {\n        onSelect: function onSelect() {\n          var _a2;\n          var _a;\n          for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = arguments[_key];\n          }\n          (_a = selection.onSelect) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [selection].concat(rest));\n          setLastSelectedKey(null);\n        }\n      });\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]);\n  // ======================= Columns ========================\n  var transformColumns = (0, _react.useCallback)(function (columns) {\n    var _a;\n    // >>>>>>>>>>> Skip if not exists `rowSelection`\n    if (!rowSelection) {\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.') : void 0;\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    }\n    // >>>>>>>>>>> Support selection\n    var cloneColumns = (0, _toConsumableArray2[\"default\"])(columns);\n    var keySet = new Set(derivedSelectedKeySet);\n    // Record key only need check with enabled\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys, 'all');\n      setLastSelectedKey(null);\n    };\n    // ===================== Render =====================\n    // Title Cell\n    var title;\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n      if (mergedSelections) {\n        var menu = {\n          getPopupContainer: getPopupContainer,\n          items: mergedSelections.map(function (selection, index) {\n            var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n            return {\n              key: key || index,\n              onClick: function onClick() {\n                onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n              },\n              label: text\n            };\n          })\n        };\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          menu: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return (0, _extends2[\"default\"])({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && ( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        \"aria-label\": customizeSelections ? 'Custom selection' : 'Select all',\n        skipGroup: true\n      }), customizeSelections));\n    }\n    // Body Cell\n    var renderCell;\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: ( /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          }))),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.') : void 0;\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        }\n        // Record checked\n        return {\n          node: ( /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1;\n              // Get range of this\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n                  return false;\n                });\n              }\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys, 'multiple');\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                    halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys;\n                  // If remove, we do it again to correction\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n              if (checked) {\n                setLastSelectedKey(null);\n              } else {\n                setLastSelectedKey(key);\n              }\n            }\n          }))),\n          checked: checked\n        };\n      };\n    }\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n        node = _renderCell.node,\n        checked = _renderCell.checked;\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n      return node;\n    };\n    // Insert selection column if not exist\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n        return ((_a = col[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n          _cloneColumns2 = (0, _toArray2[\"default\"])(_cloneColumns),\n          expandColumn = _cloneColumns2[0],\n          restColumns = _cloneColumns2.slice(1);\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(cloneColumns));\n      }\n    }\n    // Deduplicate selection column\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length <= 1, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.') : void 0;\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    });\n    // Fixed column logic\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n    if (mergedFixed && prevCol && ((_a = prevCol[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    }\n    // Replace with real selection column\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","SELECTION_NONE","SELECTION_INVERT","SELECTION_COLUMN","SELECTION_ALL","useSelection","_defineProperty2","_toArray2","_extends2","_slicedToArray2","_toConsumableArray2","_typeof2","_DownOutlined","_rcTable","_util","_conductUtil","_treeUtil","_useMergedState3","_react","React","_checkbox","_dropdown","_radio","_warning","EMPTY_LIST","flattenData","data","childrenColumnName","list","forEach","record","push","concat","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","fixed","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","getPopupContainer","_useMergedState","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","useCallback","keys","newCache","key","current","has","get","set","useEffect","_useMemo","useMemo","keyEntities","convertDataToEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","_useMemo2","_conductCheck","conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","slice","Set","derivedHalfSelectedKeySet","_useState","useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","method","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","add","Array","from","selectNone","_a2","_len","arguments","length","rest","_key","call","apply","transformColumns","columns","includes","col","cloneColumns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","items","onSelectionClick","onClick","label","createElement","className","allDisabledData","checked","_ref2","allDisabled","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","arrDel","arrAdd","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","findIndex","INTERNAL_COL_DEFINE","columnType","_cloneColumns","_cloneColumns2","expandColumn","restColumns","selectionColumnIndex","indexOf","column","prevCol","nextCol","mergedFixed","selectionColumn","width","columnTitle","render"],"sources":["/Users/apple/mu-grievance-redessal-portal/frontend/node_modules/antd/lib/table/hooks/useSelection.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_COLUMN = exports.SELECTION_ALL = void 0;\nexports[\"default\"] = useSelection;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\nvar _rcTable = require(\"rc-table\");\nvar _util = require(\"rc-tree/lib/util\");\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar React = _react;\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\nvar _warning = _interopRequireDefault(require(\"../../_util/warning\"));\n// TODO: warning if use ajax!!!\nvar SELECTION_COLUMN = exports.SELECTION_COLUMN = {};\nvar SELECTION_ALL = exports.SELECTION_ALL = 'SELECT_ALL';\nvar SELECTION_INVERT = exports.SELECTION_INVERT = 'SELECT_INVERT';\nvar SELECTION_NONE = exports.SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n    preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n    selectedRowKeys = _ref.selectedRowKeys,\n    defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n    getCheckboxProps = _ref.getCheckboxProps,\n    onSelectionChange = _ref.onChange,\n    onSelect = _ref.onSelect,\n    onSelectAll = _ref.onSelectAll,\n    onSelectInvert = _ref.onSelectInvert,\n    onSelectNone = _ref.onSelectNone,\n    onSelectMultiple = _ref.onSelectMultiple,\n    selectionColWidth = _ref.columnWidth,\n    selectionType = _ref.type,\n    selections = _ref.selections,\n    fixed = _ref.fixed,\n    customizeRenderCell = _ref.renderCell,\n    hideSelectAll = _ref.hideSelectAll,\n    _ref$checkStrictly = _ref.checkStrictly,\n    checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n  var prefixCls = config.prefixCls,\n    data = config.data,\n    pageData = config.pageData,\n    getRecordByKey = config.getRecordByKey,\n    getRowKey = config.getRowKey,\n    expandType = config.expandType,\n    childrenColumnName = config.childrenColumnName,\n    tableLocale = config.locale,\n    getPopupContainer = config.getPopupContainer;\n  // ========================= Keys =========================\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || EMPTY_LIST, {\n      value: selectedRowKeys\n    }),\n    _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n    mergedSelectedKeys = _useMergedState2[0],\n    setMergedSelectedKeys = _useMergedState2[1];\n  // ======================== Caches ========================\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = (0, _react.useCallback)(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map();\n      // Keep key if mark as preserveSelectedRowKeys\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n        newCache.set(key, record);\n      });\n      // Refresh to new cache\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]);\n  // Update cache with selectedKeys\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n  var _useMemo = (0, _react.useMemo)(function () {\n      return checkStrictly ? {\n        keyEntities: null\n      } : (0, _treeUtil.convertDataToEntities)(data, {\n        externalGetKey: getRowKey,\n        childrenPropName: childrenColumnName\n      });\n    }, [data, getRowKey, checkStrictly, childrenColumnName]),\n    keyEntities = _useMemo.keyEntities;\n  // Get flatten data\n  var flattedData = (0, _react.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]);\n  // Get all checkbox props\n  var checkboxPropsMap = (0, _react.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!('checked' in checkboxProps || 'defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.') : void 0;\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, _react.useCallback)(function (r) {\n    var _a;\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n  var _useMemo2 = (0, _react.useMemo)(function () {\n      if (checkStrictly) {\n        return [mergedSelectedKeys || [], []];\n      }\n      var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n      return [checkedKeys || [], halfCheckedKeys];\n    }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n    _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n    derivedSelectedKeys = _useMemo3[0],\n    derivedHalfSelectedKeys = _useMemo3[1];\n  var derivedSelectedKeySet = (0, _react.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, _react.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]);\n  // Save last selected key to enable range selection\n  var _useState = (0, _react.useState)(null),\n    _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n    lastSelectedKey = _useState2[0],\n    setLastSelectedKey = _useState2[1];\n  // Reset if rowSelection reset\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys(EMPTY_LIST);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, _react.useCallback)(function (keys, method) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records, {\n      type: method\n    });\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]);\n  // ====================== Selections ======================\n  // Trigger single `onSelect` event\n  var triggerSingleSelection = (0, _react.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n    setSelectedKeys(keys, 'single');\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, _react.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }), 'all');\n          }\n        };\n      }\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n            if (onSelectInvert) {\n              process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.') : void 0;\n              onSelectInvert(keys);\n            }\n            setSelectedKeys(keys, 'invert');\n          }\n        };\n      }\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }), 'none');\n          }\n        };\n      }\n      return selection;\n    }).map(function (selection) {\n      return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selection), {\n        onSelect: function onSelect() {\n          var _a2;\n          var _a;\n          for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = arguments[_key];\n          }\n          (_a = selection.onSelect) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [selection].concat(rest));\n          setLastSelectedKey(null);\n        }\n      });\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]);\n  // ======================= Columns ========================\n  var transformColumns = (0, _react.useCallback)(function (columns) {\n    var _a;\n    // >>>>>>>>>>> Skip if not exists `rowSelection`\n    if (!rowSelection) {\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.') : void 0;\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    }\n    // >>>>>>>>>>> Support selection\n    var cloneColumns = (0, _toConsumableArray2[\"default\"])(columns);\n    var keySet = new Set(derivedSelectedKeySet);\n    // Record key only need check with enabled\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys, 'all');\n      setLastSelectedKey(null);\n    };\n    // ===================== Render =====================\n    // Title Cell\n    var title;\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n      if (mergedSelections) {\n        var menu = {\n          getPopupContainer: getPopupContainer,\n          items: mergedSelections.map(function (selection, index) {\n            var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n            return {\n              key: key || index,\n              onClick: function onClick() {\n                onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n              },\n              label: text\n            };\n          })\n        };\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          menu: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return (0, _extends2[\"default\"])({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && ( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        \"aria-label\": customizeSelections ? 'Custom selection' : 'Select all',\n        skipGroup: true\n      }), customizeSelections));\n    }\n    // Body Cell\n    var renderCell;\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: ( /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          }))),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.') : void 0;\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        }\n        // Record checked\n        return {\n          node: ( /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1;\n              // Get range of this\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n                  return false;\n                });\n              }\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys, 'multiple');\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                    halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys;\n                  // If remove, we do it again to correction\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n              if (checked) {\n                setLastSelectedKey(null);\n              } else {\n                setLastSelectedKey(key);\n              }\n            }\n          }))),\n          checked: checked\n        };\n      };\n    }\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n        node = _renderCell.node,\n        checked = _renderCell.checked;\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n      return node;\n    };\n    // Insert selection column if not exist\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n        return ((_a = col[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n          _cloneColumns2 = (0, _toArray2[\"default\"])(_cloneColumns),\n          expandColumn = _cloneColumns2[0],\n          restColumns = _cloneColumns2.slice(1);\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(cloneColumns));\n      }\n    }\n    // Deduplicate selection column\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length <= 1, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.') : void 0;\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    });\n    // Fixed column logic\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n    if (mergedFixed && prevCol && ((_a = prevCol[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    }\n    // Replace with real selection column\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}