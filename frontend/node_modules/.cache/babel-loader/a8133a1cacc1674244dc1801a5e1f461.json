{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = require(\"react\");\n\n/**\n * Get sticky column offset width\n */\nfunction useStickyOffsets(colWidths, columnCount, direction) {\n  var stickyOffsets = (0, _react.useMemo)(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0; // Right offset\n\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0; // Right offset\n\n        var _end = columnCount - start - 1;\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  }, [colWidths, columnCount, direction]);\n  return stickyOffsets;\n}\nvar _default = useStickyOffsets;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_react","require","useStickyOffsets","colWidths","columnCount","direction","stickyOffsets","useMemo","leftOffsets","rightOffsets","left","right","start","end","_end","_default"],"sources":["/Users/apple/mu-grievance-redessal-portal/frontend/node_modules/rc-table/lib/hooks/useStickyOffsets.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\n/**\n * Get sticky column offset width\n */\nfunction useStickyOffsets(colWidths, columnCount, direction) {\n  var stickyOffsets = (0, _react.useMemo)(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0; // Right offset\n\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0; // Right offset\n\n        var _end = columnCount - start - 1;\n\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  }, [colWidths, columnCount, direction]);\n  return stickyOffsets;\n}\n\nvar _default = useStickyOffsets;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAO,CAAC;;AAE7B;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAE;EAC3D,IAAIC,aAAa,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACO,OAAO,EAAE,YAAY;IAClD,IAAIC,WAAW,GAAG,EAAE;IACpB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,IAAI,GAAG,CAAC;IACZ,IAAIC,KAAK,GAAG,CAAC;IAEb,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGR,WAAW,EAAEQ,KAAK,IAAI,CAAC,EAAE;MACnD,IAAIP,SAAS,KAAK,KAAK,EAAE;QACvB;QACAI,YAAY,CAACG,KAAK,CAAC,GAAGD,KAAK;QAC3BA,KAAK,IAAIR,SAAS,CAACS,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;QAEhC,IAAIC,GAAG,GAAGT,WAAW,GAAGQ,KAAK,GAAG,CAAC;QACjCJ,WAAW,CAACK,GAAG,CAAC,GAAGH,IAAI;QACvBA,IAAI,IAAIP,SAAS,CAACU,GAAG,CAAC,IAAI,CAAC;MAC7B,CAAC,MAAM;QACL;QACAL,WAAW,CAACI,KAAK,CAAC,GAAGF,IAAI;QACzBA,IAAI,IAAIP,SAAS,CAACS,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;QAE/B,IAAIE,IAAI,GAAGV,WAAW,GAAGQ,KAAK,GAAG,CAAC;QAElCH,YAAY,CAACK,IAAI,CAAC,GAAGH,KAAK;QAC1BA,KAAK,IAAIR,SAAS,CAACW,IAAI,CAAC,IAAI,CAAC;MAC/B;IACF;IAEA,OAAO;MACLJ,IAAI,EAAEF,WAAW;MACjBG,KAAK,EAAEF;IACT,CAAC;EACH,CAAC,EAAE,CAACN,SAAS,EAAEC,WAAW,EAAEC,SAAS,CAAC,CAAC;EACvC,OAAOC,aAAa;AACtB;AAEA,IAAIS,QAAQ,GAAGb,gBAAgB;AAC/BL,OAAO,CAACE,OAAO,GAAGgB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}