{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getScroll;\nexports.isWindow = isWindow;\nfunction isWindow(obj) {\n  return obj !== null && obj !== undefined && obj === obj.window;\n}\nfunction getScroll(target, top) {\n  var _a, _b;\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n  var method = top ? 'scrollTop' : 'scrollLeft';\n  var result = 0;\n  if (isWindow(target)) {\n    result = target[top ? 'pageYOffset' : 'pageXOffset'];\n  } else if (target instanceof Document) {\n    result = target.documentElement[method];\n  } else if (target instanceof HTMLElement) {\n    result = target[method];\n  } else if (target) {\n    // According to the type inference, the `target` is `never` type.\n    // Since we configured the loose mode type checking, and supports mocking the target with such shape below::\n    //    `{ documentElement: { scrollLeft: 200, scrollTop: 400 } }`,\n    //    the program may falls into this branch.\n    // Check the corresponding tests for details. Don't sure what is the real scenario this happens.\n    result = target[method];\n  }\n  if (target && !isWindow(target) && typeof result !== 'number') {\n    result = (_b = ((_a = target.ownerDocument) !== null && _a !== void 0 ? _a : target).documentElement) === null || _b === void 0 ? void 0 : _b[method];\n  }\n  return result;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getScroll","isWindow","obj","undefined","window","target","top","_a","_b","method","result","Document","documentElement","HTMLElement","ownerDocument"],"sources":["/Users/apple/mu-grievance-redessal-portal/frontend/node_modules/antd/lib/_util/getScroll.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getScroll;\nexports.isWindow = isWindow;\nfunction isWindow(obj) {\n  return obj !== null && obj !== undefined && obj === obj.window;\n}\nfunction getScroll(target, top) {\n  var _a, _b;\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n  var method = top ? 'scrollTop' : 'scrollLeft';\n  var result = 0;\n  if (isWindow(target)) {\n    result = target[top ? 'pageYOffset' : 'pageXOffset'];\n  } else if (target instanceof Document) {\n    result = target.documentElement[method];\n  } else if (target instanceof HTMLElement) {\n    result = target[method];\n  } else if (target) {\n    // According to the type inference, the `target` is `never` type.\n    // Since we configured the loose mode type checking, and supports mocking the target with such shape below::\n    //    `{ documentElement: { scrollLeft: 200, scrollTop: 400 } }`,\n    //    the program may falls into this branch.\n    // Check the corresponding tests for details. Don't sure what is the real scenario this happens.\n    result = target[method];\n  }\n  if (target && !isWindow(target) && typeof result !== 'number') {\n    result = (_b = ((_a = target.ownerDocument) !== null && _a !== void 0 ? _a : target).documentElement) === null || _b === void 0 ? void 0 : _b[method];\n  }\n  return result;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAGE,SAAS;AAC9BF,OAAO,CAACG,QAAQ,GAAGA,QAAQ;AAC3B,SAASA,QAAQA,CAACC,GAAG,EAAE;EACrB,OAAOA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,IAAID,GAAG,KAAKA,GAAG,CAACE,MAAM;AAChE;AACA,SAASJ,SAASA,CAACK,MAAM,EAAEC,GAAG,EAAE;EAC9B,IAAIC,EAAE,EAAEC,EAAE;EACV,IAAI,OAAOJ,MAAM,KAAK,WAAW,EAAE;IACjC,OAAO,CAAC;EACV;EACA,IAAIK,MAAM,GAAGH,GAAG,GAAG,WAAW,GAAG,YAAY;EAC7C,IAAII,MAAM,GAAG,CAAC;EACd,IAAIT,QAAQ,CAACI,MAAM,CAAC,EAAE;IACpBK,MAAM,GAAGL,MAAM,CAACC,GAAG,GAAG,aAAa,GAAG,aAAa,CAAC;EACtD,CAAC,MAAM,IAAID,MAAM,YAAYM,QAAQ,EAAE;IACrCD,MAAM,GAAGL,MAAM,CAACO,eAAe,CAACH,MAAM,CAAC;EACzC,CAAC,MAAM,IAAIJ,MAAM,YAAYQ,WAAW,EAAE;IACxCH,MAAM,GAAGL,MAAM,CAACI,MAAM,CAAC;EACzB,CAAC,MAAM,IAAIJ,MAAM,EAAE;IACjB;IACA;IACA;IACA;IACA;IACAK,MAAM,GAAGL,MAAM,CAACI,MAAM,CAAC;EACzB;EACA,IAAIJ,MAAM,IAAI,CAACJ,QAAQ,CAACI,MAAM,CAAC,IAAI,OAAOK,MAAM,KAAK,QAAQ,EAAE;IAC7DA,MAAM,GAAG,CAACF,EAAE,GAAG,CAAC,CAACD,EAAE,GAAGF,MAAM,CAACS,aAAa,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGF,MAAM,EAAEO,eAAe,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,MAAM,CAAC;EACvJ;EACA,OAAOC,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"script"}