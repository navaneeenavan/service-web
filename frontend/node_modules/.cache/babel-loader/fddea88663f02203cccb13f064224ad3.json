{"ast":null,"code":"import Axios from \"axios\";\nimport { userBaseURL } from \"./user\";\nlet baseURL = \"\";\nswitch (process.env.NODE_ENV) {\n  case \"development\":\n    baseURL = process.env.REACT_APP_GRIEVANCE_SERVICE_URL_DEV;\n    break;\n  case \"production\":\n    baseURL = process.env.REACT_APP_GRIEVANCE_SERVICE_URL_PROD;\n    break;\n  case \"test\":\n    baseURL = process.env.REACT_APP_GRIEVANCE_SERVICE_URL_TEST;\n    break;\n  default:\n    baseURL = process.env.REACT_APP_GRIEVANCE_SERVICE_URL_DEV;\n    break;\n}\nconst axios = Axios.create({\n  baseURL\n});\nexport const setAuthorizationHeaderForGrievanceService = token => {\n  axios.defaults.headers.Authorization = token;\n};\nexport const getGrievances = async (_, status) => {\n  const {\n    data\n  } = await axios.get(`/grievance?status=${status}`);\n  return data;\n};\nexport const getGrievancesByEmail = async () => {\n  const {\n    data\n  } = await axios.get(`/grievance/student`);\n  return data;\n};\nexport const getGrievance = async (_, id) => {\n  if (!!id) {\n    const {\n      data\n    } = await axios.get(`/grievance/${id}`);\n    return data;\n  }\n  return {};\n};\nexport const updateGrievance = async ({\n  id,\n  studentInfo,\n  grievanceInfo\n}) => {\n  const {\n    data\n  } = await axios.put(`/grievance/update/${id}`, {\n    studentInfo,\n    grievanceInfo\n  });\n  return data;\n};\nexport const createGrievance = async payload => await axios.post(`/grievance/create`, payload);\nexport const getGrievanceStats = async () => {\n  const {\n    data\n  } = await axios.get(`/grievance/stats`);\n  return data;\n};\nexport const allocateDate = async ({\n  id,\n  payload\n}) => await axios.patch(`/grievance/date/${id}`, payload);\nexport const addComment = async ({\n  id,\n  payload\n}) => await axios.patch(`/grievance/comment/${id}`, payload);\nexport const selectGrievance = async id => await axios.patch(`/grievance/select/${id}`);\nexport const rejectGrievance = async ({\n  id,\n  message,\n  email\n}) => await axios.patch(`/grievance/reject/${id}`, {\n  message,\n  email\n});\nexport const sendResolution = async ({\n  id,\n  payload\n}) => await axios.patch(`grievance/resolution/${id}`, payload);\nexport const sendATR = async ({\n  id,\n  payload\n}) => await axios.patch(`grievance/atr/${id}`, payload);\nexport const sendInvite = async ({\n  payload\n}) => await axios.put(\"grievance/invite\", payload);\nexport const fetchEmailIdOfPrincipal = async (key, collegeName) => {\n  if (!!collegeName) {\n    const {\n      data\n    } = await axios.get(`/grievance/email/${collegeName}`);\n    return data;\n  }\n  return null;\n};\nexport const sendPrincipalActions = async ({\n  id,\n  payload\n}) => await axios.patch(\"grievance/principal/\" + id, payload);\nexport const fetchStudentDetails = async (_, id, type) => {\n  if (type === \"EDIT\") {\n    if (!!id) {\n      const {\n        data\n      } = await axios.get(`/grievance/${id}`);\n      return data;\n    }\n    return {};\n  } else {\n    const {\n      data\n    } = await axios.get(`${userBaseURL}/user/${id}`);\n    return data;\n  }\n};","map":{"version":3,"names":["Axios","userBaseURL","baseURL","process","env","NODE_ENV","REACT_APP_GRIEVANCE_SERVICE_URL_DEV","REACT_APP_GRIEVANCE_SERVICE_URL_PROD","REACT_APP_GRIEVANCE_SERVICE_URL_TEST","axios","create","setAuthorizationHeaderForGrievanceService","token","defaults","headers","Authorization","getGrievances","_","status","data","get","getGrievancesByEmail","getGrievance","id","updateGrievance","studentInfo","grievanceInfo","put","createGrievance","payload","post","getGrievanceStats","allocateDate","patch","addComment","selectGrievance","rejectGrievance","message","email","sendResolution","sendATR","sendInvite","fetchEmailIdOfPrincipal","key","collegeName","sendPrincipalActions","fetchStudentDetails","type"],"sources":["/Users/apple/mu-grievance-redessal-portal/frontend/src/APIs/grievance.jsx"],"sourcesContent":["import Axios from \"axios\";\nimport { userBaseURL } from \"./user\";\n\nlet baseURL = \"\";\nswitch (process.env.NODE_ENV) {\n  case \"development\":\n    baseURL = process.env.REACT_APP_GRIEVANCE_SERVICE_URL_DEV;\n    break;\n  case \"production\":\n    baseURL = process.env.REACT_APP_GRIEVANCE_SERVICE_URL_PROD;\n    break;\n  case \"test\":\n    baseURL = process.env.REACT_APP_GRIEVANCE_SERVICE_URL_TEST;\n    break;\n  default:\n    baseURL = process.env.REACT_APP_GRIEVANCE_SERVICE_URL_DEV;\n    break;\n}\n\nconst axios = Axios.create({\n  baseURL,\n});\n\nexport const setAuthorizationHeaderForGrievanceService = (token) => {\n  axios.defaults.headers.Authorization = token;\n};\n\nexport const getGrievances = async (_, status) => {\n  const { data } = await axios.get(`/grievance?status=${status}`);\n  return data;\n};\nexport const getGrievancesByEmail = async () => {\n  const { data } = await axios.get(`/grievance/student`);\n  return data;\n};\n\nexport const getGrievance = async (_, id) => {\n  if (!!id) {\n    const { data } = await axios.get(`/grievance/${id}`);\n    return data;\n  }\n  return {};\n};\n\nexport const updateGrievance = async ({ id, studentInfo, grievanceInfo }) => {\n  const { data } = await axios.put(`/grievance/update/${id}`, { studentInfo, grievanceInfo });\n  return data;\n};\n\nexport const createGrievance = async (payload) => await axios.post(`/grievance/create`, payload);\n\nexport const getGrievanceStats = async () => {\n  const { data } = await axios.get(`/grievance/stats`);\n  return data;\n};\n\nexport const allocateDate = async ({ id, payload }) => await axios.patch(`/grievance/date/${id}`, payload);\n\nexport const addComment = async ({ id, payload }) => await axios.patch(`/grievance/comment/${id}`, payload);\n\nexport const selectGrievance = async (id) => await axios.patch(`/grievance/select/${id}`);\n\nexport const rejectGrievance = async ({ id, message, email }) => await axios.patch(`/grievance/reject/${id}`, { message, email });\n\nexport const sendResolution = async ({ id, payload }) => await axios.patch(`grievance/resolution/${id}`, payload);\n\nexport const sendATR = async ({ id, payload }) => await axios.patch(`grievance/atr/${id}`, payload);\n\nexport const sendInvite = async ({ payload }) => await axios.put(\"grievance/invite\", payload);\n\nexport const fetchEmailIdOfPrincipal = async (key, collegeName) => {\n  if (!!collegeName) {\n    const { data } = await axios.get(`/grievance/email/${collegeName}`);\n    return data;\n  }\n  return null;\n};\n\nexport const sendPrincipalActions = async ({ id, payload }) => await axios.patch(\"grievance/principal/\" + id, payload);\n\nexport const fetchStudentDetails = async (_, id, type) => {\n  if (type === \"EDIT\") {\n    if (!!id) {\n      const { data } = await axios.get(`/grievance/${id}`);\n      return data;\n    }\n    return {};\n  } else {\n    const { data } = await axios.get(`${userBaseURL}/user/${id}`);\n    return data;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}