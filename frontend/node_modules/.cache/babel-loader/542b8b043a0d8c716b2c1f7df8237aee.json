{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/steps/style\";\nimport _Steps from \"antd/lib/steps\";\nvar _jsxFileName = \"/Users/apple/mu-grievance-redessal-portal/frontend/src/pages/PostGrievance/PostGrievance.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport { errorMessage } from \"utils/modalMessage\";\nimport { createGrievance, updateGrievance } from \"APIs/grievance\";\nimport { getBase64 } from \"utils/getBase64\";\nimport Layout from \"containers/Layout/Layout\";\nimport { Spinner } from \"components/Loaders/Loaders\";\nimport { validObject } from \"utils/validObject\";\nimport { blobsToBase64s } from \"utils/getBase64\";\nimport \"./PostGrievance.scss\";\nimport { fetchStudentDetails } from \"APIs/grievance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Step\n} = _Steps;\nconst PostGrievance = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [signature, setSignature] = useState([]);\n  const [supportingDocs, setSupportingDocs] = useState([]);\n  const [cgrcDocs, setCgrcDocs] = useState([]);\n  const [formData, setFormData] = useState({});\n  const {\n    id\n  } = useParams();\n  const authorId = localStorage.getItem(\"id\");\n  const type = !!id ? \"EDIT\" : \"CREATE\";\n  const {\n    data: {\n      grievance,\n      student\n    } = {},\n    isLoading: loadingGrievance\n  } = useQuery([\"fetchStudentDetails\", type === \"EDIT\" ? id : authorId, type], fetchStudentDetails, {\n    onSuccess: ({\n      grievance\n    }) => {\n      if (type === \"EDIT\" && validObject(grievance) && grievance.status !== \"NEW\" && grievance.status !== \"REJECTED\") {\n        _Modal.error({\n          title: \"Oops!\",\n          content: \"You cannot edit your grievance now.\",\n          onOk: () => history.goBack()\n        });\n      }\n    },\n    retry: 1,\n    refetchOnWindowFocus: false,\n    refetchOnMount: false\n  });\n  const [createGrievanceMutation, {\n    isLoading: createGrievanceLoading\n  }] = useMutation(createGrievance, {\n    onSuccess: () => {\n      _Modal.success({\n        content: \"Successfully submitted your grievance\"\n      });\n      history.push(\"/student\");\n    },\n    onError: ({\n      response\n    }) => errorMessage(validObject(response) && response.data)\n  });\n  const [updateGrievanceMutation, {\n    isLoading: updateGrievanceLoading\n  }] = useMutation(updateGrievance, {\n    onSuccess: () => {\n      _Modal.success({\n        content: \"Successfully submitted your grievance\"\n      });\n      history.push(\"/student\");\n    },\n    onError: ({\n      response\n    }) => errorMessage(validObject(response) && response.data)\n  });\n  const [signatureState, setSignatureState] = useState({\n    signaturePreviewVisible: false,\n    signaturePreviewImage: \"\",\n    signaturePreviewTitle: \"\",\n    signatureFileList: []\n  });\n  const [supportingDocsState, setSupportingDocsState] = useState({\n    supportingDocsPreviewVisible: false,\n    supportingDocsPreviewImage: \"\",\n    supportingDocsPreviewTitle: \"\",\n    supportingDocsFileList: []\n  });\n  const [cgrcDocsState, setCgrcDocsState] = useState({\n    cgrcgDocsPreviewVisible: false,\n    cgrcgDocsPreviewImage: \"\",\n    cgrcgDocsPreviewTitle: \"\",\n    cgrcDocsFileList: []\n  });\n  const history = useHistory();\n  useEffect(() => {\n    if (validObject(student)) {\n      setFormData(() => ({\n        ...formData,\n        ...grievance,\n        ...student.studentInfo\n      }));\n      setSignatureState({\n        ...signatureState,\n        signatureFileList: validObject(student.studentInfo) ? [{\n          uid: 0,\n          size: 1007152,\n          type: \"image/png\",\n          url: student.studentInfo.signatureUrl,\n          status: \"done\",\n          name: \"grievance\"\n        }] : []\n      });\n    }\n    if (validObject(grievance)) {\n      setSupportingDocsState({\n        ...supportingDocsState,\n        supportingDocsFileList: validObject(grievance) ? grievance.supportingDocsUrls.map((ele, index) => ({\n          uid: index,\n          size: 1007152,\n          type: \"image/png\",\n          url: ele,\n          status: \"done\",\n          name: \"grievance\"\n        })) : []\n      });\n      setCgrcDocsState({\n        ...cgrcDocsState,\n        cgrcDocsFileList: validObject(grievance) ? grievance.cgrcDocsUrls.map((ele, index) => ({\n          uid: index,\n          size: 1007152,\n          type: \"image/png\",\n          url: ele,\n          status: \"done\",\n          name: \"grievance\"\n        })) : []\n      });\n    }\n  }, [grievance, student]);\n  const steps = [{\n    title: \"Start\"\n  }, {\n    title: \"End\"\n  }];\n  const onSubmit = async data => {\n    const studentInfo = {\n      fullName: data.fullName,\n      phoneNumber: data.phoneNumber,\n      collegeName: data.collegeName,\n      gender: data.gender,\n      rollNo: data.rollNo,\n      semester: data.semester,\n      areaOfStudy: data.areaOfStudy,\n      programOfStudy: data.programOfStudy,\n      fieldOfStudy: data.fieldOfStudy\n    };\n    if (validObject(signature)) {\n      const extension = signature[0].type === \"image/jpeg\" ? \"jpg\" : signature[0].type.split(\"/\")[1];\n      studentInfo.signature = {\n        data: await getBase64(signature[0]),\n        extension: extension\n      };\n    }\n    const grievanceInfo = {\n      title: data.title,\n      description: data.description,\n      complaintAgainst: data.complaintAgainst\n    };\n    if (validObject(supportingDocs)) {\n      grievanceInfo.supportingDocs = await blobsToBase64s(supportingDocs);\n    }\n    if (validObject(cgrcDocs)) {\n      grievanceInfo.cgrcDocs = await blobsToBase64s(cgrcDocs);\n    }\n    if (!!id) {\n      grievanceInfo.supportingDocsUrls = data.supportingDocsUrls;\n      grievanceInfo.cgrcDocsUrls = data.cgrcDocsUrls;\n      updateGrievanceMutation({\n        id,\n        grievanceInfo,\n        studentInfo\n      });\n    } else createGrievanceMutation({\n      grievanceInfo,\n      studentInfo\n    });\n  };\n  const signatureProps = {\n    onRemove: () => {\n      setSignature([]);\n    },\n    beforeUpload: file => {\n      const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n      if (isJpgOrPng) {\n        if (file.size <= 1097152) {\n          Object.defineProperty(file, \"name\", {\n            writable: true,\n            value: `signature`\n          });\n          console.log(file);\n          setSignature([file]);\n        } else {\n          _Modal.error({\n            title: \"Please upload an image of size less than 1mb\"\n          });\n        }\n      } else {\n        _Modal.error({\n          title: \"Only jpg and png format supported!\"\n        });\n      }\n      return false;\n    },\n    fileList: signature\n  };\n  const supportingDocsProps = {\n    onRemove: file => {\n      const index = supportingDocs.indexOf(file);\n      const newFileList = supportingDocs.slice();\n      newFileList.splice(index, 1);\n      setSupportingDocs(newFileList);\n    },\n    beforeUpload: file => {\n      const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n      if (isJpgOrPng) {\n        if (file.size <= 1097152) {\n          Object.defineProperty(file, \"name\", {\n            writable: true,\n            value: `grievanceDocument${supportingDocs.length + 1}`\n          });\n          setSupportingDocs([...supportingDocs, file]);\n        } else {\n          _Modal.error({\n            title: \"Please upload an image of size less than 1mb\"\n          });\n        }\n      } else {\n        _Modal.error({\n          title: \"Only jpeg/jpg and png format supported!\"\n        });\n      }\n      return false;\n    },\n    fileList: supportingDocs\n  };\n  const cgrcDocsProps = {\n    onRemove: file => {\n      const index = cgrcDocs.indexOf(file);\n      const newFileList = cgrcDocs.slice();\n      newFileList.splice(index, 1);\n      setCgrcDocs(newFileList);\n    },\n    beforeUpload: file => {\n      const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n      if (isJpgOrPng) {\n        if (file.size <= 1097152) {\n          Object.defineProperty(file, \"name\", {\n            writable: true,\n            value: `cgrcDocument${cgrcDocs.length + 1}`\n          });\n          setCgrcDocs([...cgrcDocs, file]);\n        } else {\n          _Modal.error({\n            title: \"Please upload an image of size less than 1mb\"\n          });\n        }\n      } else {\n        _Modal.error({\n          title: \"Only jpeg/jpg and png format supported!\"\n        });\n      }\n      return false;\n    },\n    fileList: cgrcDocs\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: loadingGrievance ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostGrievance animate__animated animate__fadeIn\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"steps\",\n        children: /*#__PURE__*/_jsxDEV(_Steps, {\n          current: step - 1,\n          children: steps.map(item => /*#__PURE__*/_jsxDEV(Step, {\n            title: item.title\n          }, item.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Grievance Redressal Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), step === 1 ? /*#__PURE__*/_jsxDEV(Step1, {\n        step: step,\n        edit: !!id,\n        setStep: setStep,\n        signature: signature,\n        signatureProps: signatureProps,\n        signatureState: signatureState,\n        setSignatureState: setSignatureState,\n        formData: formData,\n        setFormData: setFormData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Step2, {\n        step: step,\n        setStep: setStep,\n        edit: !!id,\n        supportingDocs: supportingDocs,\n        cgrcDocs: cgrcDocs,\n        supportingDocsProps: supportingDocsProps,\n        cgrcDocsProps: cgrcDocsProps,\n        supportingDocsState: supportingDocsState,\n        setSupportingDocsState: setSupportingDocsState,\n        cgrcDocsState: cgrcDocsState,\n        setCgrcDocsState: setCgrcDocsState,\n        onSubmit: onSubmit,\n        formData: formData,\n        setFormData: setFormData,\n        updateGrievanceLoading: updateGrievanceLoading,\n        createGrievanceLoading: createGrievanceLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(PostGrievance, \"BjQwJ/iYc9SDfp0QEVQpWaS9qhs=\", false, function () {\n  return [useParams, useQuery, useMutation, useMutation, useHistory];\n});\n_c = PostGrievance;\nexport default PostGrievance;\nvar _c;\n$RefreshReg$(_c, \"PostGrievance\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useHistory","useMutation","useQuery","Step1","Step2","errorMessage","createGrievance","updateGrievance","getBase64","Layout","Spinner","validObject","blobsToBase64s","fetchStudentDetails","jsxDEV","_jsxDEV","Step","_Steps","PostGrievance","_s","step","setStep","signature","setSignature","supportingDocs","setSupportingDocs","cgrcDocs","setCgrcDocs","formData","setFormData","id","authorId","localStorage","getItem","type","data","grievance","student","isLoading","loadingGrievance","onSuccess","status","_Modal","error","title","content","onOk","history","goBack","retry","refetchOnWindowFocus","refetchOnMount","createGrievanceMutation","createGrievanceLoading","success","push","onError","response","updateGrievanceMutation","updateGrievanceLoading","signatureState","setSignatureState","signaturePreviewVisible","signaturePreviewImage","signaturePreviewTitle","signatureFileList","supportingDocsState","setSupportingDocsState","supportingDocsPreviewVisible","supportingDocsPreviewImage","supportingDocsPreviewTitle","supportingDocsFileList","cgrcDocsState","setCgrcDocsState","cgrcgDocsPreviewVisible","cgrcgDocsPreviewImage","cgrcgDocsPreviewTitle","cgrcDocsFileList","studentInfo","uid","size","url","signatureUrl","name","supportingDocsUrls","map","ele","index","cgrcDocsUrls","steps","onSubmit","fullName","phoneNumber","collegeName","gender","rollNo","semester","areaOfStudy","programOfStudy","fieldOfStudy","extension","split","grievanceInfo","description","complaintAgainst","signatureProps","onRemove","beforeUpload","file","isJpgOrPng","Object","defineProperty","writable","value","console","log","fileList","supportingDocsProps","indexOf","newFileList","slice","splice","length","cgrcDocsProps","children","fileName","_jsxFileName","lineNumber","columnNumber","className","current","item","edit","_c","$RefreshReg$"],"sources":["/Users/apple/mu-grievance-redessal-portal/frontend/src/pages/PostGrievance/PostGrievance.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Steps, Modal } from \"antd\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport { errorMessage } from \"utils/modalMessage\";\nimport { createGrievance, updateGrievance } from \"APIs/grievance\";\nimport { getBase64 } from \"utils/getBase64\";\nimport Layout from \"containers/Layout/Layout\";\nimport { Spinner } from \"components/Loaders/Loaders\";\nimport { validObject } from \"utils/validObject\";\nimport { blobsToBase64s } from \"utils/getBase64\";\nimport \"./PostGrievance.scss\";\nimport { fetchStudentDetails } from \"APIs/grievance\";\n\nconst { Step } = Steps;\n\nconst PostGrievance = () => {\n  const [step, setStep] = useState(1);\n  const [signature, setSignature] = useState([]);\n  const [supportingDocs, setSupportingDocs] = useState([]);\n  const [cgrcDocs, setCgrcDocs] = useState([]);\n  const [formData, setFormData] = useState({});\n  const { id } = useParams();\n  const authorId = localStorage.getItem(\"id\");\n  const type = !!id ? \"EDIT\" : \"CREATE\";\n\n  const { data: { grievance, student } = {}, isLoading: loadingGrievance } = useQuery(\n    [\"fetchStudentDetails\", type === \"EDIT\" ? id : authorId, type],\n    fetchStudentDetails,\n    {\n      onSuccess: ({ grievance }) => {\n        if (type === \"EDIT\" && validObject(grievance) && grievance.status !== \"NEW\" && grievance.status !== \"REJECTED\") {\n          Modal.error({\n            title: \"Oops!\",\n            content: \"You cannot edit your grievance now.\",\n            onOk: () => history.goBack(),\n          });\n        }\n      },\n      retry: 1,\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n    }\n  );\n\n  const [createGrievanceMutation, { isLoading: createGrievanceLoading }] = useMutation(createGrievance, {\n    onSuccess: () => {\n      Modal.success({\n        content: \"Successfully submitted your grievance\",\n      });\n      history.push(\"/student\");\n    },\n    onError: ({ response }) => errorMessage(validObject(response) && response.data),\n  });\n\n  const [updateGrievanceMutation, { isLoading: updateGrievanceLoading }] = useMutation(updateGrievance, {\n    onSuccess: () => {\n      Modal.success({\n        content: \"Successfully submitted your grievance\",\n      });\n      history.push(\"/student\");\n    },\n    onError: ({ response }) => errorMessage(validObject(response) && response.data),\n  });\n\n  const [signatureState, setSignatureState] = useState({\n    signaturePreviewVisible: false,\n    signaturePreviewImage: \"\",\n    signaturePreviewTitle: \"\",\n    signatureFileList: [],\n  });\n\n  const [supportingDocsState, setSupportingDocsState] = useState({\n    supportingDocsPreviewVisible: false,\n    supportingDocsPreviewImage: \"\",\n    supportingDocsPreviewTitle: \"\",\n    supportingDocsFileList: [],\n  });\n\n  const [cgrcDocsState, setCgrcDocsState] = useState({\n    cgrcgDocsPreviewVisible: false,\n    cgrcgDocsPreviewImage: \"\",\n    cgrcgDocsPreviewTitle: \"\",\n    cgrcDocsFileList: [],\n  });\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (validObject(student)) {\n      setFormData(() => ({ ...formData, ...grievance, ...student.studentInfo }));\n      setSignatureState({\n        ...signatureState,\n        signatureFileList: validObject(student.studentInfo)\n          ? [\n              {\n                uid: 0,\n                size: 1007152,\n                type: \"image/png\",\n                url: student.studentInfo.signatureUrl,\n                status: \"done\",\n                name: \"grievance\",\n              },\n            ]\n          : [],\n      });\n    }\n\n    if (validObject(grievance)) {\n      setSupportingDocsState({\n        ...supportingDocsState,\n        supportingDocsFileList: validObject(grievance)\n          ? grievance.supportingDocsUrls.map((ele, index) => ({\n              uid: index,\n              size: 1007152,\n              type: \"image/png\",\n              url: ele,\n              status: \"done\",\n              name: \"grievance\",\n            }))\n          : [],\n      });\n\n      setCgrcDocsState({\n        ...cgrcDocsState,\n        cgrcDocsFileList: validObject(grievance)\n          ? grievance.cgrcDocsUrls.map((ele, index) => ({\n              uid: index,\n              size: 1007152,\n              type: \"image/png\",\n              url: ele,\n              status: \"done\",\n              name: \"grievance\",\n            }))\n          : [],\n      });\n    }\n  }, [grievance, student]);\n\n  const steps = [\n    {\n      title: \"Start\",\n    },\n    {\n      title: \"End\",\n    },\n  ];\n\n  const onSubmit = async (data) => {\n    const studentInfo = {\n      fullName: data.fullName,\n      phoneNumber: data.phoneNumber,\n      collegeName: data.collegeName,\n      gender: data.gender,\n      rollNo: data.rollNo,\n      semester: data.semester,\n      areaOfStudy: data.areaOfStudy,\n      programOfStudy: data.programOfStudy,\n      fieldOfStudy: data.fieldOfStudy,\n    };\n\n    if (validObject(signature)) {\n      const extension = signature[0].type === \"image/jpeg\" ? \"jpg\" : signature[0].type.split(\"/\")[1];\n      studentInfo.signature = {\n        data: await getBase64(signature[0]),\n        extension: extension,\n      };\n    }\n\n    const grievanceInfo = {\n      title: data.title,\n      description: data.description,\n      complaintAgainst: data.complaintAgainst,\n    };\n\n    if (validObject(supportingDocs)) {\n      grievanceInfo.supportingDocs = await blobsToBase64s(supportingDocs);\n    }\n\n    if (validObject(cgrcDocs)) {\n      grievanceInfo.cgrcDocs = await blobsToBase64s(cgrcDocs);\n    }\n\n    if (!!id) {\n      grievanceInfo.supportingDocsUrls = data.supportingDocsUrls;\n      grievanceInfo.cgrcDocsUrls = data.cgrcDocsUrls;\n      updateGrievanceMutation({ id, grievanceInfo, studentInfo });\n    } else createGrievanceMutation({ grievanceInfo, studentInfo });\n  };\n\n  const signatureProps = {\n    onRemove: () => {\n      setSignature([]);\n    },\n    beforeUpload: (file) => {\n      const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n      if (isJpgOrPng) {\n        if (file.size <= 1097152) {\n          Object.defineProperty(file, \"name\", {\n            writable: true,\n            value: `signature`,\n          });\n          console.log(file);\n          setSignature([file]);\n        } else {\n          Modal.error({\n            title: \"Please upload an image of size less than 1mb\",\n          });\n        }\n      } else {\n        Modal.error({\n          title: \"Only jpg and png format supported!\",\n        });\n      }\n      return false;\n    },\n    fileList: signature,\n  };\n\n  const supportingDocsProps = {\n    onRemove: (file) => {\n      const index = supportingDocs.indexOf(file);\n      const newFileList = supportingDocs.slice();\n      newFileList.splice(index, 1);\n      setSupportingDocs(newFileList);\n    },\n    beforeUpload: (file) => {\n      const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n      if (isJpgOrPng) {\n        if (file.size <= 1097152) {\n          Object.defineProperty(file, \"name\", {\n            writable: true,\n            value: `grievanceDocument${supportingDocs.length + 1}`,\n          });\n          setSupportingDocs([...supportingDocs, file]);\n        } else {\n          Modal.error({\n            title: \"Please upload an image of size less than 1mb\",\n          });\n        }\n      } else {\n        Modal.error({\n          title: \"Only jpeg/jpg and png format supported!\",\n        });\n      }\n      return false;\n    },\n    fileList: supportingDocs,\n  };\n\n  const cgrcDocsProps = {\n    onRemove: (file) => {\n      const index = cgrcDocs.indexOf(file);\n      const newFileList = cgrcDocs.slice();\n      newFileList.splice(index, 1);\n      setCgrcDocs(newFileList);\n    },\n    beforeUpload: (file) => {\n      const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n      if (isJpgOrPng) {\n        if (file.size <= 1097152) {\n          Object.defineProperty(file, \"name\", {\n            writable: true,\n            value: `cgrcDocument${cgrcDocs.length + 1}`,\n          });\n          setCgrcDocs([...cgrcDocs, file]);\n        } else {\n          Modal.error({\n            title: \"Please upload an image of size less than 1mb\",\n          });\n        }\n      } else {\n        Modal.error({\n          title: \"Only jpeg/jpg and png format supported!\",\n        });\n      }\n      return false;\n    },\n    fileList: cgrcDocs,\n  };\n\n  return (\n    <Layout>\n      {loadingGrievance ? (\n        <Spinner />\n      ) : (\n        <div className=\"PostGrievance animate__animated animate__fadeIn\">\n          <div className=\"steps\">\n            <Steps current={step - 1}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n          </div>\n          <div className=\"heading\">\n            <h1>Grievance Redressal Form</h1>\n          </div>\n          {step === 1 ? (\n            <Step1\n              step={step}\n              edit={!!id}\n              setStep={setStep}\n              signature={signature}\n              signatureProps={signatureProps}\n              signatureState={signatureState}\n              setSignatureState={setSignatureState}\n              formData={formData}\n              setFormData={setFormData}\n            />\n          ) : (\n            <Step2\n              step={step}\n              setStep={setStep}\n              edit={!!id}\n              supportingDocs={supportingDocs}\n              cgrcDocs={cgrcDocs}\n              supportingDocsProps={supportingDocsProps}\n              cgrcDocsProps={cgrcDocsProps}\n              supportingDocsState={supportingDocsState}\n              setSupportingDocsState={setSupportingDocsState}\n              cgrcDocsState={cgrcDocsState}\n              setCgrcDocsState={setCgrcDocsState}\n              onSubmit={onSubmit}\n              formData={formData}\n              setFormData={setFormData}\n              updateGrievanceLoading={updateGrievanceLoading}\n              createGrievanceLoading={createGrievanceLoading}\n            />\n          )}\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default PostGrievance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}